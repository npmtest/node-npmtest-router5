{"/home/travis/build/npmtest/node-npmtest-router5/test.js":"/* istanbul instrument in package npmtest_router5 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-router5/lib.npmtest_router5.js":"/* istanbul instrument in package npmtest_router5 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_router5 = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_router5 = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-router5/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-router5 && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_router5 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_router5\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_router5.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_router5.rollup.js'] =\n            local.assetsDict['/assets.npmtest_router5.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_router5.__dirname + '/lib.npmtest_router5.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.constants = exports.transitionPath = exports.errorCodes = exports.loggerPlugin = exports.RouteNode = exports.createRouter = undefined;\n\nvar _createRouter = require('./create-router');\n\nvar _createRouter2 = _interopRequireDefault(_createRouter);\n\nvar _routeNode = require('route-node');\n\nvar _routeNode2 = _interopRequireDefault(_routeNode);\n\nvar _logger = require('./plugins/logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _router = require('router5.transition-path');\n\nvar _router2 = _interopRequireDefault(_router);\n\nvar _constants = require('./constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _createRouter2.default;\nexports.createRouter = _createRouter2.default;\nexports.RouteNode = _routeNode2.default;\nexports.loggerPlugin = _logger2.default;\nexports.errorCodes = _constants.errorCodes;\nexports.transitionPath = _router2.default;\nexports.constants = _constants2.default;","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/create-router.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _routeNode = require('route-node');\n\nvar _routeNode2 = _interopRequireDefault(_routeNode);\n\nvar _utils = require('./core/utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _routerLifecycle = require('./core/router-lifecycle');\n\nvar _routerLifecycle2 = _interopRequireDefault(_routerLifecycle);\n\nvar _navigation = require('./core/navigation');\n\nvar _navigation2 = _interopRequireDefault(_navigation);\n\nvar _middleware = require('./core/middleware');\n\nvar _middleware2 = _interopRequireDefault(_middleware);\n\nvar _plugins = require('./core/plugins');\n\nvar _plugins2 = _interopRequireDefault(_plugins);\n\nvar _routeLifecycle = require('./core/route-lifecycle');\n\nvar _routeLifecycle2 = _interopRequireDefault(_routeLifecycle);\n\nvar _clone = require('./core/clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _constants = require('./constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar defaultOptions = {\n    trailingSlash: 0,\n    useTrailingSlash: undefined,\n    autoCleanUp: true,\n    strictQueryParams: true,\n    allowNotFound: false,\n    strongMatching: true\n};\n\n/**\n * Create a router\n * @param  {Array}  [routes]          The routes\n * @param  {Object} [options={}]      The router options\n * @param  {Object} [dependencies={}] The router dependencies\n * @return {Object}                   The router instance\n */\nfunction createRouter(routes) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var deps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var routerState = null;\n    var stateId = 0;\n    var callbacks = {};\n    var dependencies = deps;\n    var options = _extends({}, defaultOptions);\n\n    Object.keys(opts).forEach(function (opt) {\n        return setOption(opt, opts[opt]);\n    });\n\n    var router = {\n        rootNode: rootNode,\n        getOptions: getOptions,\n        setOption: setOption,\n        getState: getState,\n        setState: setState,\n        makeState: makeState,\n        makeNotFoundState: makeNotFoundState,\n        setDependency: setDependency,\n        setDependencies: setDependencies,\n        getDependencies: getDependencies,\n        add: add,\n        addNode: addNode,\n        executeFactory: executeFactory,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n        invokeEventListeners: invokeEventListeners\n    };\n\n    /**\n     * Invoke all event listeners by event name. Possible event names are listed under constants\n     * (`import { constants } from 'router5'`): `ROUTER_START`, `ROUTER_STOP`, `TRANSITION_START`,\n     * `TRANSITION_CANCEL`, `TRANSITION_SUCCESS`, `TRANSITION_ERROR`.\n     * This method is used internally and should not be invoked directly, but it can be useful for\n     * testing purposes.\n     * @private\n     * @name invokeEventListeners\n     * @param  {String}    eventName The event name\n     */\n    function invokeEventListeners(eventName) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n        }\n\n        (callbacks[eventName] || []).forEach(function (cb) {\n            return cb.apply(undefined, args);\n        });\n    }\n\n    /**\n     * Removes an event listener\n     * @private\n     * @param  {String}   eventName The event name\n     * @param  {Function} cb        The callback to remove\n     */\n    function removeEventListener(eventName, cb) {\n        callbacks[eventName] = callbacks[eventName].filter(function (_cb) {\n            return _cb !== cb;\n        });\n    }\n\n    /**\n     * Add an event listener\n     * @private\n     * @param {String}   eventName The event name\n     * @param {Function} cb        The callback to add\n     */\n    function addEventListener(eventName, cb) {\n        callbacks[eventName] = (callbacks[eventName] || []).concat(cb);\n\n        return function () {\n            return removeEventListener(eventName, cb);\n        };\n    }\n\n    (0, _utils2.default)(router);\n    (0, _plugins2.default)(router);\n    (0, _middleware2.default)(router);\n    (0, _routeLifecycle2.default)(router);\n    (0, _routerLifecycle2.default)(router);\n    (0, _navigation2.default)(router);\n    (0, _clone2.default)(router, createRouter);\n\n    var rootNode = routes instanceof _routeNode2.default ? routes : new _routeNode2.default('', '', routes, addCanActivate);\n\n    router.rootNode = rootNode;\n\n    return router;\n\n    function addCanActivate(route) {\n        if (route.canActivate) router.canActivate(route.name, route.canActivate);\n    }\n\n    /**\n     * Build a state object\n     * @param  {String} name         The state name\n     * @param  {Object} params       The state params\n     * @param  {String} path         The state path\n     * @param  {Object} [metaParams] Description of the state params\n     * @param  {String} [source]     The source of the routing state\n     * @return {Object}              The state object\n     */\n    function makeState(name, params, path, metaParams, source) {\n        var state = {};\n        var setProp = function setProp(key, value) {\n            return Object.defineProperty(state, key, { value: value, enumerable: true });\n        };\n        setProp('name', name);\n        setProp('params', params);\n        setProp('path', path);\n\n        if (metaParams || source) {\n            stateId += 1;\n            var meta = { params: metaParams, id: stateId };\n\n            if (source) meta.source = source;\n\n            setProp('meta', meta);\n        }\n\n        return state;\n    }\n\n    /**\n     * Build a not found state for a given path\n     * @param  {String} path The unmatched path\n     * @return {Object}      The not found state object\n     */\n    function makeNotFoundState(path) {\n        return makeState(_constants2.default.UNKNOWN_ROUTE, { path: path }, path, {});\n    }\n\n    /**\n     * Get the current router state\n     * @return {Object} The current state\n     */\n    function getState() {\n        return routerState;\n    }\n\n    /**\n     * Set the current router state\n     * @param {Object} state The state object\n     */\n    function setState(state) {\n        routerState = state;\n    }\n\n    /**\n     * Get router options\n     * @return {Object} The router options\n     */\n    function getOptions() {\n        return options;\n    }\n\n    /**\n     * Set an option\n     * @param  {String} option The option name\n     * @param  {*}      value  The option value\n     * @return {Object}       The router instance\n     */\n    function setOption(option, value) {\n        if (option === 'useTrailingSlash' && value !== undefined) {\n            options.trailingSlash = true;\n        }\n        options[option] = value;\n        return router;\n    }\n\n    /**\n     * Set a router dependency\n     * @param  {String} dependencyName The dependency name\n     * @param  {*}      dependency     The dependency\n     * @return {Object}                The router instance\n     */\n    function setDependency(dependencyName, dependency) {\n        dependencies[dependencyName] = dependency;\n        return router;\n    }\n\n    /**\n     * Add dependencies\n     * @param { Object} deps A object of dependencies (key-value pairs)\n     * @return {Object}      The router instance\n     */\n    function setDependencies(deps) {\n        Object.keys(deps).forEach(function (depName) {\n            dependencies[depName] = deps[depName];\n        });\n\n        return router;\n    }\n\n    /**\n     * Get dependencies\n     * @return {Object} The dependencies\n     */\n    function getDependencies() {\n        return dependencies;\n    }\n\n    function getInjectables() {\n        return [router, getDependencies()];\n    }\n\n    function executeFactory(factoryFunction) {\n        return factoryFunction.apply(undefined, _toConsumableArray(getInjectables()));\n    }\n\n    /**\n     * Add routes\n     * @param  {Array} routes A list of routes to add\n     * @return {Object}       The router instance\n     */\n    function add(routes) {\n        rootNode.add(routes, addCanActivate);\n        return router;\n    }\n\n    /**\n     * Add a single route (node)\n     * @param {String} name                   The route name (full name)\n     * @param {String} path                   The route path (from parent)\n     * @param {Function} [canActivateHandler] The canActivate handler for this node\n     */\n    function addNode(name, path, canActivateHandler) {\n        router.rootNode.addNode(name, path);\n        if (canActivateHandler) router.canActivate(name, canActivateHandler);\n        return router;\n    }\n}\n\nexports.default = createRouter;","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/core/utils.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = withUtils;\n\nvar _constants = require('../constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction withUtils(router) {\n    var options = router.getOptions();\n\n    router.isActive = isActive;\n    router.areStatesEqual = areStatesEqual;\n    router.areStatesDescendants = areStatesDescendants;\n    router.buildPath = buildPath;\n    router.buildState = buildState;\n    router.matchPath = matchPath;\n    router.setRootPath = setRootPath;\n\n    /**\n     * Check if a route is currently active\n     * @param  {String}  name                     The route name\n     * @param  {Object}  params                   The route params\n     * @param  {Boolean} [strictEquality=false]   Whether to check if the given route is the active route, or part of the active route\n     * @param  {Boolean} [ignoreQueryParams=true] Whether to ignore query parameters\n     * @return {Boolean}                          Whether the given route is active\n     */\n    function isActive(name) {\n        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var strictEquality = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var ignoreQueryParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n        var activeState = router.getState();\n\n        if (!activeState) return false;\n\n        if (strictEquality || activeState.name === name) {\n            return areStatesEqual(router.makeState(name, params), activeState, ignoreQueryParams);\n        }\n\n        return areStatesDescendants(router.makeState(name, params), activeState);\n    }\n\n    /**\n     * Compare two route state objects\n     * @param  {Object}  state1            The route state\n     * @param  {Object}  state2            The other route state\n     * @param  {Boolean} ignoreQueryParams Whether to ignore query parameters or not\n     * @return {Boolean}                   Whether the two route state are equal or not\n     */\n    function areStatesEqual(state1, state2) {\n        var ignoreQueryParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n        if (state1.name !== state2.name) return false;\n\n        var getUrlParams = function getUrlParams(name) {\n            return router.rootNode.getSegmentsByName(name).map(function (segment) {\n                return segment.parser[ignoreQueryParams ? 'urlParams' : 'params'];\n            }).reduce(function (params, p) {\n                return params.concat(p);\n            }, []);\n        };\n\n        var state1Params = getUrlParams(state1.name);\n        var state2Params = getUrlParams(state2.name);\n\n        return state1Params.length === state2Params.length && state1Params.every(function (p) {\n            return state1.params[p] === state2.params[p];\n        });\n    }\n\n    /**\n     * Check if two states are related\n     * @param  {State} parentState  The parent state\n     * @param  {State} childState   The child state\n     * @return {Boolean}            Whether the two states are descendants or not\n     */\n    function areStatesDescendants(parentState, childState) {\n        var regex = new RegExp('^' + parentState.name + '\\\\.(.*)$');\n        if (!regex.test(childState.name)) return false;\n        // If child state name extends parent state name, and all parent state params\n        // are in child state params.\n        return Object.keys(parentState.params).every(function (p) {\n            return parentState.params[p] === childState.params[p];\n        });\n    }\n\n    /**\n     * Build a path\n     * @param  {String} route  The route name\n     * @param  {Object} params The route params\n     * @return {String}        The path\n     */\n    function buildPath(route, params) {\n        if (route === _constants2.default.UNKNOWN_ROUTE) {\n            return params.path;\n        }\n\n        var useTrailingSlash = options.useTrailingSlash,\n            strictQueryParams = options.strictQueryParams;\n\n        return router.rootNode.buildPath(route, params, { trailingSlash: useTrailingSlash, strictQueryParams: strictQueryParams });\n    }\n\n    function buildState(route, params) {\n        return router.rootNode.buildState(route, params);\n    }\n\n    /**\n     * Match a path\n     * @param  {String} path     The path to match\n     * @param  {String} [source] The source (optional, used internally)\n     * @return {Object}          The matched state (null if unmatched)\n     */\n    function matchPath(path, source) {\n        var trailingSlash = options.trailingSlash,\n            strictQueryParams = options.strictQueryParams,\n            strongMatching = options.strongMatching;\n\n        var match = router.rootNode.matchPath(path, { trailingSlash: trailingSlash, strictQueryParams: strictQueryParams, strongMatching: strongMatching });\n\n        if (match) {\n            var name = match.name,\n                params = match.params,\n                _meta = match._meta;\n\n            var builtPath = options.useTrailingSlash === undefined ? path : router.buildPath(name, params);\n\n            return router.makeState(name, params, builtPath, _meta, source);\n        }\n\n        return null;\n    }\n\n    /**\n     * Set the root node patch, use carefully. It can be used to set app-wide allowed query parameters.\n     * @param {String} rootPath The root node path\n     */\n    function setRootPath(rootPath) {\n        router.rootNode.setPath(rootPath);\n    }\n}","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/constants.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar errorCodes = exports.errorCodes = {\n    ROUTER_NOT_STARTED: 'NOT_STARTED',\n    NO_START_PATH_OR_STATE: 'NO_START_PATH_OR_STATE',\n    ROUTER_ALREADY_STARTED: 'ALREADY_STARTED',\n    ROUTE_NOT_FOUND: 'ROUTE_NOT_FOUND',\n    SAME_STATES: 'SAME_STATES',\n    CANNOT_DEACTIVATE: 'CANNOT_DEACTIVATE',\n    CANNOT_ACTIVATE: 'CANNOT_ACTIVATE',\n    TRANSITION_ERR: 'TRANSITION_ERR',\n    TRANSITION_CANCELLED: 'CANCELLED'\n};\n\nvar constants = {\n    UNKNOWN_ROUTE: '@@router5/UNKNOWN_ROUTE',\n    ROUTER_START: '$start',\n    ROUTER_STOP: '$stop',\n    TRANSITION_START: '$$start',\n    TRANSITION_CANCEL: '$$cancel',\n    TRANSITION_SUCCESS: '$$success',\n    TRANSITION_ERROR: '$$error'\n};\n\nexports.default = constants;","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/core/router-lifecycle.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = withRouterLifecycle;\n\nvar _constants = require('../constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar noop = function noop() {};\n\nfunction withRouterLifecycle(router) {\n    var started = false;\n    var options = router.getOptions();\n\n    router.isStarted = isStarted;\n    router.start = start;\n    router.stop = stop;\n\n    /**\n     * Check if the router is started\n     * @return {Boolean} Whether the router is started or not\n     */\n    function isStarted() {\n        return started;\n    }\n\n    /**\n     * Start the router\n     * @param  {String|Object} startPathOrState The start path or state. This is optional when using the browser plugin.\n     * @param  {Function}      done             A done node style callback (err, state)\n     * @return {Object}                         The router instance\n     */\n    function start() {\n        var _ref;\n\n        var lastArg = (_ref = arguments.length - 1, arguments.length <= _ref ? undefined : arguments[_ref]);\n        var done = typeof lastArg === 'function' ? lastArg : noop;\n        var startPathOrState = typeof (arguments.length <= 0 ? undefined : arguments[0]) !== 'function' ? arguments.length <= 0 ? undefined : arguments[0] : undefined;\n\n        if (started) {\n            done({ code: _constants.errorCodes.ROUTER_ALREADY_STARTED });\n            return router;\n        }\n\n        var startPath = void 0,\n            startState = void 0;\n\n        started = true;\n        router.invokeEventListeners(_constants2.default.ROUTER_START);\n\n        // callback\n        var cb = function cb(err, state) {\n            var invokeErrCb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            if (!err) router.invokeEventListeners(_constants2.default.TRANSITION_SUCCESS, state, null, { replace: true });\n            if (err && invokeErrCb) router.invokeEventListeners(_constants2.default.TRANSITION_ERROR, state, null, err);\n            done(err, state);\n        };\n\n        if (startPathOrState === undefined && !options.defaultRoute) {\n            return cb({ code: _constants.errorCodes.NO_START_PATH_OR_STATE });\n        }if (typeof startPathOrState === 'string') {\n            startPath = startPathOrState;\n        } else if ((typeof startPathOrState === 'undefined' ? 'undefined' : _typeof(startPathOrState)) === 'object') {\n            startState = startPathOrState;\n        }\n\n        if (!startState) {\n            // If no supplied start state, get start state\n            startState = startPath === undefined ? null : router.matchPath(startPath);\n\n            // Navigate to default function\n            var navigateToDefault = function navigateToDefault() {\n                return router.navigateToDefault({ replace: true }, done);\n            };\n            var redirect = function redirect(route) {\n                return router.navigate(route.name, route.params, { replace: true, reload: true }, done);\n            };\n            // If matched start path\n            if (startState) {\n                router.transitionToState(startState, router.getState(), {}, function (err, state) {\n                    if (!err) cb(null, state);else if (err.redirect) redirect(err.redirect);else if (options.defaultRoute) navigateToDefault();else cb(err, null, false);\n                });\n            } else if (options.defaultRoute) {\n                // If default, navigate to default\n                navigateToDefault();\n            } else if (options.allowNotFound) {\n                cb(null, router.makeNotFoundState(startPath));\n            } else {\n                // No start match, no default => do nothing\n                cb({ code: _constants.errorCodes.ROUTE_NOT_FOUND, path: startPath }, null);\n            }\n        } else {\n            // Initialise router with provided start state\n            router.setState(startState);\n            cb(null, startState);\n        }\n\n        return router;\n    }\n\n    /**\n     * Stop the router\n     * @return {Object} The router instance\n     */\n    function stop() {\n        if (started) {\n            router.setState(null);\n            started = false;\n            router.invokeEventListeners(_constants2.default.ROUTER_STOP);\n        }\n\n        return router;\n    }\n}","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/core/navigation.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = withNavigation;\n\nvar _constants = require('../constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _transition = require('../transition');\n\nvar _transition2 = _interopRequireDefault(_transition);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar noop = function noop() {};\n\nfunction withNavigation(router) {\n    var cancelCurrentTransition = void 0;\n\n    router.navigate = navigate;\n    router.navigateToDefault = navigateToDefault;\n    router.transitionToState = transitionToState;\n    router.cancel = cancel;\n\n    /**\n     * Cancel the current transition if there is one\n     * @return {Object} The router instance\n     */\n    function cancel() {\n        if (cancelCurrentTransition) {\n            cancelCurrentTransition('navigate');\n            cancelCurrentTransition = null;\n        }\n\n        return router;\n    }\n\n    /**\n     * Navigate to a route\n     * @param  {String}   routeName      The route name\n     * @param  {Object}   [routeParams]  The route params\n     * @param  {Object}   [options]      The navigation options (`replace`, `reload`)\n     * @param  {Function} [done]         A done node style callback (err, state)\n     * @return {Function}                A cancel function\n     */\n    function navigate() {\n        var _ref;\n\n        var name = arguments.length <= 0 ? undefined : arguments[0];\n        var lastArg = (_ref = arguments.length - 1, arguments.length <= _ref ? undefined : arguments[_ref]);\n        var done = typeof lastArg === 'function' ? lastArg : noop;\n        var params = _typeof(arguments.length <= 1 ? undefined : arguments[1]) === 'object' ? arguments.length <= 1 ? undefined : arguments[1] : {};\n        var opts = _typeof(arguments.length <= 2 ? undefined : arguments[2]) === 'object' ? arguments.length <= 2 ? undefined : arguments[2] : {};\n\n        if (!router.isStarted()) {\n            done({ code: _constants.errorCodes.ROUTER_NOT_STARTED });\n            return;\n        }\n\n        var route = router.buildState(name, params);\n\n        if (!route) {\n            var err = { code: _constants.errorCodes.ROUTE_NOT_FOUND };\n            done(err);\n            router.invokeEventListeners(_constants2.default.TRANSITION_ERROR, null, router.getState(), err);\n            return;\n        }\n\n        var toState = router.makeState(route.name, route.params, router.buildPath(name, params), route._meta);\n        var sameStates = router.getState() ? router.areStatesEqual(router.getState(), toState, false) : false;\n\n        // Do not proceed further if states are the same and no reload\n        // (no desactivation and no callbacks)\n        if (sameStates && !opts.reload) {\n            var _err = { code: _constants.errorCodes.SAME_STATES };\n            done(_err);\n            router.invokeEventListeners(_constants2.default.TRANSITION_ERROR, toState, router.getState(), _err);\n            return;\n        }\n\n        var fromState = sameStates ? null : router.getState();\n\n        // Transitio\n        return transitionToState(toState, fromState, opts, function (err, state) {\n            if (err) {\n                if (err.redirect) {\n                    var _err$redirect = err.redirect,\n                        _name = _err$redirect.name,\n                        _params = _err$redirect.params;\n\n\n                    navigate(_name, _params, _extends({}, opts, { reload: true }), done);\n                } else {\n                    done(err);\n                }\n            } else {\n                router.invokeEventListeners(_constants2.default.TRANSITION_SUCCESS, state, fromState, opts);\n                done(null, state);\n            }\n        });\n    }\n\n    /**\n     * Navigate to the default route (if defined)\n     * @param  {Object}   [opts] The navigation options\n     * @param  {Function} [done] A done node style callback (err, state)\n     * @return {Function}        A cancel function\n     */\n    function navigateToDefault() {\n        var opts = _typeof(arguments.length <= 0 ? undefined : arguments[0]) === 'object' ? arguments.length <= 0 ? undefined : arguments[0] : {};\n        var done = arguments.length === 2 ? arguments.length <= 1 ? undefined : arguments[1] : typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'function' ? arguments.length <= 0 ? undefined : arguments[0] : noop;\n        var options = router.getOptions();\n\n        if (options.defaultRoute) {\n            return navigate(options.defaultRoute, options.defaultParams, opts, done);\n        }\n\n        return function () {};\n    }\n\n    function transitionToState(toState, fromState) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var done = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n\n        cancel();\n        router.invokeEventListeners(_constants2.default.TRANSITION_START, toState, fromState);\n\n        cancelCurrentTransition = (0, _transition2.default)(router, toState, fromState, options, function (err, state) {\n            cancelCurrentTransition = null;\n            state = state || toState;\n\n            if (err) {\n                if (err.code === _constants.errorCodes.TRANSITION_CANCELLED) {\n                    router.invokeEventListeners(_constants2.default.TRANSITION_CANCEL, toState, fromState);\n                } else {\n                    router.invokeEventListeners(_constants2.default.TRANSITION_ERROR, toState, fromState, err);\n                }\n                done(err);\n            } else {\n                router.setState(state);\n                done(null, state);\n            }\n        });\n\n        return cancelCurrentTransition;\n    }\n}","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/transition/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _router = require('router5.transition-path');\n\nvar _router2 = _interopRequireDefault(_router);\n\nvar _resolve = require('./resolve');\n\nvar _resolve2 = _interopRequireDefault(_resolve);\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexports.default = transition;\n\n\nfunction transition(router, toState, fromState, opts, callback) {\n    var cancelled = false;\n    var completed = false;\n    var options = router.getOptions();\n\n    var _router$getLifecycleF = router.getLifecycleFunctions(),\n        _router$getLifecycleF2 = _slicedToArray(_router$getLifecycleF, 2),\n        canDeactivateFunctions = _router$getLifecycleF2[0],\n        canActivateFunctions = _router$getLifecycleF2[1];\n\n    var middlewareFunctions = router.getMiddlewareFunctions();\n    var isCancelled = function isCancelled() {\n        return cancelled;\n    };\n    var cancel = function cancel() {\n        if (!cancelled && !completed) {\n            cancelled = true;\n            callback({ code: _constants.errorCodes.TRANSITION_CANCELLED }, null);\n        }\n    };\n    var done = function done(err, state) {\n        completed = true;\n\n        if (isCancelled()) {\n            return;\n        }\n\n        if (!err && options.autoCleanUp) {\n            var activeSegments = (0, _router.nameToIDs)(toState.name);\n            Object.keys(canDeactivateFunctions).forEach(function (name) {\n                if (activeSegments.indexOf(name) === -1) router.clearCanDeactivate(name);\n            });\n        }\n\n        callback(err, state || toState);\n    };\n    var makeError = function makeError(base, err) {\n        return _extends({}, base, err instanceof Object ? err : { error: err });\n    };\n\n    var _transitionPath = (0, _router2.default)(toState, fromState),\n        toDeactivate = _transitionPath.toDeactivate,\n        toActivate = _transitionPath.toActivate;\n\n    var asyncBase = { isCancelled: isCancelled, toState: toState, fromState: fromState };\n\n    var canDeactivate = function canDeactivate(toState, fromState, cb) {\n        var canDeactivateFunctionMap = toDeactivate.filter(function (name) {\n            return canDeactivateFunctions[name];\n        }).reduce(function (fnMap, name) {\n            return _extends({}, fnMap, _defineProperty({}, name, canDeactivateFunctions[name]));\n        }, {});\n\n        (0, _resolve2.default)(canDeactivateFunctionMap, _extends({}, asyncBase, { errorKey: 'segment' }), function (err) {\n            return cb(err ? makeError({ code: _constants.errorCodes.CANNOT_DEACTIVATE }, err) : null);\n        });\n    };\n\n    var canActivate = function canActivate(toState, fromState, cb) {\n        var canActivateFunctionMap = toActivate.filter(function (name) {\n            return canActivateFunctions[name];\n        }).reduce(function (fnMap, name) {\n            return _extends({}, fnMap, _defineProperty({}, name, canActivateFunctions[name]));\n        }, {});\n\n        (0, _resolve2.default)(canActivateFunctionMap, _extends({}, asyncBase, { errorKey: 'segment' }), function (err) {\n            return cb(err ? makeError({ code: _constants.errorCodes.CANNOT_ACTIVATE }, err) : null);\n        });\n    };\n\n    var middleware = !middlewareFunctions.length ? [] : function (toState, fromState, cb) {\n        return (0, _resolve2.default)(middlewareFunctions, _extends({}, asyncBase), function (err, state) {\n            return cb(err ? makeError({ code: _constants.errorCodes.TRANSITION_ERR }, err) : null, state || toState);\n        });\n    };\n\n    var pipeline = (fromState && !opts.forceDeactivate ? [canDeactivate] : []).concat(canActivate).concat(middleware);\n\n    (0, _resolve2.default)(pipeline, asyncBase, done);\n\n    return cancel;\n}","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5.transition-path/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.nameToIDs = nameToIDs;\nfunction nameToIDs(name) {\n    return name.split('.').reduce(function (ids, name) {\n        return ids.concat(ids.length ? ids[ids.length - 1] + '.' + name : name);\n    }, []);\n}\n\nfunction exists(val) {\n    return val !== undefined && val !== null;\n}\n\nfunction hasMetaParams(state) {\n    return state && state.meta && state.meta.params;\n}\n\nfunction extractSegmentParams(name, state) {\n    if (!exists(state.meta.params[name])) return {};\n\n    return Object.keys(state.meta.params[name]).reduce(function (params, p) {\n        params[p] = state.params[p];\n        return params;\n    }, {});\n}\n\nfunction transitionPath(toState, fromState) {\n    var fromStateIds = fromState ? nameToIDs(fromState.name) : [];\n    var toStateIds = nameToIDs(toState.name);\n    var maxI = Math.min(fromStateIds.length, toStateIds.length);\n\n    function pointOfDifference() {\n        var i = void 0;\n\n        var _loop = function _loop() {\n            var left = fromStateIds[i];\n            var right = toStateIds[i];\n\n            if (left !== right) return {\n                    v: i\n                };\n\n            var leftParams = extractSegmentParams(left, toState);\n            var rightParams = extractSegmentParams(right, fromState);\n\n            if (leftParams.length !== rightParams.length) return {\n                    v: i\n                };\n            if (leftParams.length === 0) return 'continue';\n\n            var different = Object.keys(leftParams).some(function (p) {\n                return rightParams[p] !== leftParams[p];\n            });\n            if (different) {\n                return {\n                    v: i\n                };\n            }\n        };\n\n        for (i = 0; i < maxI; i += 1) {\n            var _ret = _loop();\n\n            switch (_ret) {\n                case 'continue':\n                    continue;\n\n                default:\n                    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n            }\n        }\n\n        return i;\n    }\n\n    var i = void 0;\n    if (!fromState) {\n        i = 0;\n    } else if (!hasMetaParams(fromState) && !hasMetaParams(toState)) {\n        console.warn('[router5.transition-path] Some states are missing metadata, reloading all segments');\n        i = 0;\n    } else {\n        i = pointOfDifference();\n    }\n\n    var toDeactivate = fromStateIds.slice(i).reverse();\n    var toActivate = toStateIds.slice(i);\n\n    var intersection = fromState && i > 0 ? fromStateIds[i - 1] : '';\n\n    return {\n        intersection: intersection,\n        toDeactivate: toDeactivate,\n        toActivate: toActivate\n    };\n}\n\nexports.default = transitionPath;","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/transition/resolve.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = resolve;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction resolve(functions, _ref, callback) {\n    var isCancelled = _ref.isCancelled,\n        toState = _ref.toState,\n        fromState = _ref.fromState,\n        errorKey = _ref.errorKey;\n\n    var remainingFunctions = Array.isArray(functions) ? functions : Object.keys(functions);\n\n    var isState = function isState(obj) {\n        return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj.name !== undefined && obj.params !== undefined && obj.path !== undefined;\n    };\n    var hasStateChanged = function hasStateChanged(state) {\n        return state.name !== toState.name || state.params !== toState.params || state.path !== toState.path;\n    };\n\n    var processFn = function processFn(done) {\n        if (!remainingFunctions.length) return true;\n\n        var isMapped = typeof remainingFunctions[0] === 'string';\n        var errBase = errorKey && isMapped ? _defineProperty({}, errorKey, remainingFunctions[0]) : {};\n        var stepFn = isMapped ? functions[remainingFunctions[0]] : remainingFunctions[0];\n\n        // const len = stepFn.length;\n        var res = stepFn.call(null, toState, fromState, done);\n        if (isCancelled()) {\n            done(null);\n        } else if (typeof res === 'boolean') {\n            done(res ? null : errBase);\n        } else if (res && typeof res.then === 'function') {\n            res.then(function (resVal) {\n                if (resVal instanceof Error) done({ error: resVal }, null);else done(null, resVal);\n            }, function (err) {\n                if (err instanceof Error) {\n                    console.error(err.stack || err);\n                    done(_extends({}, errBase, { promiseError: err }), null);\n                } else {\n                    done((typeof err === 'undefined' ? 'undefined' : _typeof(err)) === 'object' ? _extends({}, errBase, err) : errBase, null);\n                }\n            });\n        }\n        // else: wait for done to be called\n\n        return false;\n    };\n\n    var iterate = function iterate(err, val) {\n        if (isCancelled()) {\n            callback();\n        } else if (err) {\n            callback(err);\n        } else {\n            if (val && isState(val)) {\n                if (hasStateChanged(val)) console.error('[router5][transition] Warning: state values changed during transition process.');\n                toState = val;\n            }\n            remainingFunctions = remainingFunctions.slice(1);\n            next();\n        }\n    };\n\n    var next = function next() {\n        if (isCancelled()) {\n            callback();\n        } else {\n            var finished = processFn(iterate);\n            if (finished) callback(null, toState);\n        }\n    };\n\n    next();\n}","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/core/middleware.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = withMiddleware;\nfunction withMiddleware(router) {\n    var middlewareFactories = [];\n    var middlewareFunctions = [];\n\n    router.useMiddleware = useMiddleware;\n    router.getMiddlewareFactories = getMiddlewareFactories;\n    router.getMiddlewareFunctions = getMiddlewareFunctions;\n    router.clearMiddleware = clearMiddleware;\n\n    /**\n     * Register middleware functions.\n     * @param  {...Function} middlewares The middleware functions\n     * @return {Object}                  The router instance\n     */\n    function useMiddleware() {\n        for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n            middlewares[_key] = arguments[_key];\n        }\n\n        middlewares.forEach(addMiddleware);\n\n        return router;\n    }\n\n    /**\n     * Remove all middleware functions\n     * @return {Object} The router instance\n     */\n    function clearMiddleware() {\n        middlewareFactories = [];\n        middlewareFunctions = [];\n\n        return router;\n    }\n\n    function getMiddlewareFactories() {\n        return middlewareFactories;\n    }\n\n    function getMiddlewareFunctions() {\n        return middlewareFunctions;\n    }\n\n    function addMiddleware(middleware) {\n        middlewareFactories.push(middleware);\n        middlewareFunctions.push(router.executeFactory(middleware));\n    }\n}","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/core/plugins.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = withPlugins;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar pluginMethods = ['onStart', 'onStop', 'onTransitionSuccess', 'onTransitionStart', 'onTransitionError', 'onTransitionCancel'];\n\nfunction withPlugins(router) {\n    var plugins = [];\n    var removePluginListeners = [];\n\n    router.usePlugin = usePlugin;\n    router.hasPlugin = hasPlugin;\n    router.getPlugins = getPlugins;\n\n    function getPlugins() {\n        return plugins;\n    }\n\n    /**\n     * Use plugins\n     * @param  {...Function} plugins An argument list of plugins\n     * @return {Object}              The router instance\n     */\n    function usePlugin() {\n        for (var _len = arguments.length, plugins = Array(_len), _key = 0; _key < _len; _key++) {\n            plugins[_key] = arguments[_key];\n        }\n\n        plugins.forEach(addPlugin);\n        return router;\n    }\n\n    function addPlugin(plugin) {\n        if (!hasPlugin(plugin)) {\n            plugins.push(plugin);\n            startPlugin(plugin);\n        }\n    }\n\n    /**\n     * Check if a plugin has already been registered.\n     * @param  {String}  pluginName The plugin name\n     * @return {Boolean}            Whether the plugin has been registered\n     */\n    function hasPlugin(pluginName) {\n        return plugins.filter(function (p) {\n            return p.pluginName === pluginName || p.name === pluginName;\n        }).length > 0;\n    }\n\n    function startPlugin(plugin) {\n        var appliedPlugin = router.executeFactory(plugin);\n\n        var removeEventListeners = pluginMethods.map(function (methodName) {\n            if (appliedPlugin[methodName]) {\n                return router.addEventListener(methodName.toLowerCase().replace(/^on/, '$$').replace(/transition/, '$$'), appliedPlugin[methodName]);\n            }\n        }).filter(Boolean);\n\n        removePluginListeners.push.apply(removePluginListeners, _toConsumableArray(removeEventListeners));\n    }\n}","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/core/route-lifecycle.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = withRouteLifecycle;\nvar toFunction = function toFunction(val) {\n    return typeof val === 'function' ? val : function () {\n        return function () {\n            return val;\n        };\n    };\n};\n\nfunction withRouteLifecycle(router) {\n    var canDeactivateFactories = {};\n    var canActivateFactories = {};\n    var canDeactivateFunctions = {};\n    var canActivateFunctions = {};\n\n    router.canDeactivate = canDeactivate;\n    router.canActivate = canActivate;\n    router.getLifecycleFactories = getLifecycleFactories;\n    router.getLifecycleFunctions = getLifecycleFunctions;\n    router.clearCanDeactivate = clearCanDeactivate;\n\n    function getLifecycleFactories() {\n        return [canDeactivateFactories, canActivateFactories];\n    }\n\n    function getLifecycleFunctions() {\n        return [canDeactivateFunctions, canActivateFunctions];\n    }\n\n    /**\n     * Register a canDeactivate handler or specify a if a route can be deactivated\n     * @param  {String} name                           The route name\n     * @param  {Function|Boolean} canDeactivateHandler The canDeactivate handler or boolean\n     * @return {Object}                                The router instance\n     */\n    function canDeactivate(name, canDeactivateHandler) {\n        var factory = toFunction(canDeactivateHandler);\n\n        canDeactivateFactories[name] = factory;\n        canDeactivateFunctions[name] = router.executeFactory(factory);\n\n        return router;\n    }\n\n    /**\n     * Remove a canDeactivate handler for a route\n     * @param  {String} name The route name\n     * @return {Object}      The router instance\n     */\n    function clearCanDeactivate(name) {\n        canDeactivateFactories[name] = undefined;\n        canDeactivateFunctions[name] = undefined;\n\n        return router;\n    }\n\n    /**\n     * Register a canActivate handler or specify a if a route can be deactivated\n     * @param  {String} name                         The route name\n     * @param  {Function|Boolean} canActivateHandler The canActivate handler or boolean\n     * @return {Object}                              The router instance\n     */\n    function canActivate(name, canActivateHandler) {\n        var factory = toFunction(canActivateHandler);\n\n        canActivateFactories[name] = factory;\n        canActivateFunctions[name] = router.executeFactory(factory);\n\n        return router;\n    }\n}","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/core/clone.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = withCloning;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction withCloning(router, createRouter) {\n    router.clone = clone;\n\n    /**\n     * Clone the current router configuration. The new returned router will be non-started,\n     * with a null state\n     * @param  {[type]} deps [description]\n     * @return {[type]}      [description]\n     */\n    function clone() {\n        var deps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        var clonedDependencies = _extends({}, router.getDependencies(), deps);\n        var clonedRouter = createRouter(router.rootNode, router.getOptions(), clonedDependencies);\n\n        clonedRouter.useMiddleware.apply(clonedRouter, _toConsumableArray(router.getMiddlewareFactories()));\n        clonedRouter.usePlugin.apply(clonedRouter, _toConsumableArray(router.getPlugins()));\n\n        var _router$getLifecycleF = router.getLifecycleFactories(),\n            _router$getLifecycleF2 = _slicedToArray(_router$getLifecycleF, 2),\n            canDeactivateFactories = _router$getLifecycleF2[0],\n            canActivateFactories = _router$getLifecycleF2[1];\n\n        Object.keys(canDeactivateFactories).forEach(function (name) {\n            return clonedRouter.canDeactivate(name, canDeactivateFactories[name]);\n        });\n        Object.keys(canActivateFactories).forEach(function (name) {\n            return clonedRouter.canActivate(name, canActivateFactories[name]);\n        });\n\n        return clonedRouter;\n    }\n};","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/plugins/logger/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/* istanbul ignore next */\n/*eslint no-console: 0*/\n\nfunction loggerPlugin() {\n    var startGroup = function startGroup() {\n        return console.group('Router transition');\n    };\n    var endGroup = function endGroup() {\n        return console.groupEnd('Router transition');\n    };\n\n    console.info('Router started');\n\n    return {\n        onStop: function onStop() {\n            console.info('Router stopped');\n        },\n        onTransitionStart: function onTransitionStart(toState, fromState) {\n            endGroup();\n            startGroup();\n            console.log('Transition started from state');\n            console.log(fromState);\n            console.log('To state');\n            console.log(toState);\n        },\n        onTransitionCancel: function onTransitionCancel() {\n            console.warn('Transition cancelled');\n        },\n        onTransitionError: function onTransitionError(toState, fromState, err) {\n            console.warn('Transition error with code ' + err.code);\n            endGroup();\n        },\n        onTransitionSuccess: function onTransitionSuccess() {\n            console.log('Transition success');\n            endGroup();\n        }\n    };\n};\n\nloggerPlugin.pluginName = 'LOGGER_PLUGIN';\n\nexports.default = loggerPlugin;","/home/travis/build/npmtest/node-npmtest-router5/node_modules/router5/plugins/browser/browser.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n * Dumb functions\n */\n// istanbul ignore next\nvar identity = function identity(arg) {\n    return function () {\n        return arg;\n    };\n};\n// istanbul ignore next\nvar noop = function noop() {};\n\n/**\n * Browser detection\n */\nvar isBrowser = typeof window !== 'undefined' && window.history;\n\n/**\n * Browser functions needed by router5\n */\nvar getBase = function getBase() {\n    return window.location.pathname.replace(/\\/$/, '');\n};\n\nvar pushState = function pushState(state, title, path) {\n    return window.history.pushState(state, title, path);\n};\n\nvar replaceState = function replaceState(state, title, path) {\n    return window.history.replaceState(state, title, path);\n};\n\nvar addPopstateListener = function addPopstateListener(fn) {\n    return window.addEventListener('popstate', fn);\n};\n\nvar removePopstateListener = function removePopstateListener(fn) {\n    return window.removeEventListener('popstate', fn);\n};\n\nvar getLocation = function getLocation(opts) {\n    var path = opts.useHash ? window.location.hash.replace(new RegExp('^#' + opts.hashPrefix), '') : window.location.pathname.replace(new RegExp('^' + opts.base), '');\n    return (path || '/') + window.location.search;\n};\n\nvar getState = function getState() {\n    return window.history.state;\n};\n\n/**\n * Export browser object\n */\nvar browser = {};\nif (isBrowser) {\n    browser = { getBase: getBase, pushState: pushState, replaceState: replaceState, addPopstateListener: addPopstateListener, removePopstateListener: removePopstateListener, getLocation: getLocation, getState: getState };\n} else {\n    // istanbul ignore next\n    browser = {\n        getBase: identity(''),\n        pushState: noop,\n        replaceState: noop,\n        addPopstateListener: noop,\n        removePopstateListener: noop,\n        getLocation: identity(''),\n        getState: identity(null)\n    };\n}\n\nexports.default = browser;"}